# 기본 스레드 풀 사용
fast-dispatcher {
	type = Dispatcher
	throughput = 1000
}

# 기본 스레드 풀 사용
slow-dispatcher {
	type = Dispatcher
	throughput = 10
}

# 기본 스레드 풀 사용
custom-dispatcher {
	type = Dispatcher
	throughput = 10
}

# TPL 사용
custom-task-dispatcher {
	type = TaskDispatcher
	throughput = 10
}

# 스레드풀 사용전략 직접 지정
custom-fork-join-dispatcher {
	type = ForkJoinDispatcher
	throughput = 10
	dedicated-thread-pool {
		thread-count = 3
		deadlock-timeout = 3s
		threadtype = background
	}
}

akka {
	loggers = ["Akka.Logger.NLog.NLogLogger, Akka.Logger.NLog"]
	loglevel = debug	

	remote {
		log-remote-lifecycle-events = info
        dot-netty.tcp {
            port = $akkaport
			hostname = $akkaip
		}
    }

	actor {
		provider = cluster
		deployment {
			/cluster-roundrobin {
				router = round-robin-pool # routing strategy
				#routees.paths = ["/user/clustermsg"]
				nr-of-instances = 500 # max number of total routees
				cluster {
					enabled = on
					allow-local-routees = on
					use-role = akkanet
					max-nr-of-instances-per-node = 100
				}
			}
			/printer-pool {
				router = round-robin-pool
				nr-of-instances = 5
			}

			/highpass-gate-pool {
				router = round-robin-pool
				nr-of-instances = 100
			}

			/cashpass-gate-pool {
				router = smallest-mailbox-pool
				nr-of-instances = 10
			}
		}
	}

	cluster {
        seed-nodes = ["akka.tcp://AkkaNetCore@$akkaseed"] # address of seed node
        roles = [$roles] # roles this member is in
        auto-down-unreachable-after = 300s
		debug {
			verbose-heartbeat-logging = off
			verbose-receive-gossip-logging = off
		} 
    }

}
